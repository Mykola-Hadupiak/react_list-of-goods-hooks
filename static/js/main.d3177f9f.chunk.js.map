{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","reverseList","NONE","sortType","sortMethod","goodsRender","goods","visibleGoods","sort","item1","item2","LENGTH","length","ALPHABET","localeCompare","reverse","getReorderedGoods","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAgCE,IAAME,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA+BF,mBAASH,EAASM,MAAjD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EA9BD,SACLC,EACAH,EACAH,GAEA,IAAMO,EAAY,YAAOD,GAkBzB,OAhBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQP,GACN,KAAKP,EAASe,OACZ,OAAOF,EAAMG,OAASF,EAAME,OAC9B,KAAKhB,EAASiB,SACZ,OAAOJ,EAAMK,cAAcJ,GAE7B,QACE,OAAO,MAITV,GACFO,EAAaQ,UAGRR,EAOaS,CAClBnB,EACAM,EACAH,GAQF,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SAAU,UACV,CAAE,WAAYhB,IAAaP,EAASiB,WAEtCO,QAAS,kBAAOhB,EAAWR,EAASiB,WANtC,iCAWA,wBACEK,KAAK,SACLD,UAAWE,IACT,SAAU,aACV,CAAE,WAAYhB,IAAaP,EAASe,SAEtCS,QAAS,kBAAOhB,EAAWR,EAASe,SANtC,4BAWA,wBACEO,KAAK,SACLD,UAAWE,IACT,SAAU,aACV,CAAE,YAAanB,IAEjBoB,QAAS,kBAAOnB,GAAaD,IAN/B,sBAWEA,GAAcG,IAAaP,EAASM,OAEpC,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAAS,kBA7CjBnB,GAAY,QACZG,EAAWR,EAASM,OAyCd,sBAUJ,6BACGG,EAAYgB,KAAI,SAAAC,GACf,OACE,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCjHpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d3177f9f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((item1, item2) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return item1.length - item2.length;\n      case SortType.ALPHABET:\n        return item1.localeCompare(item2);\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, reverseList] = useState(false);\n  const [sortType, sortMethod] = useState(SortType.NONE);\n\n  const goodsRender = getReorderedGoods(\n    goodsFromServer,\n    sortType,\n    isReversed,\n  );\n\n  const reset = () => {\n    reverseList(false);\n    sortMethod(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button', 'is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={() => (sortMethod(SortType.ALPHABET))}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button', 'is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => (sortMethod(SortType.LENGTH))}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button', 'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => (reverseList(!isReversed))}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || sortType !== SortType.NONE)\n        && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => reset()}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goodsRender.map(good => {\n          return (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}